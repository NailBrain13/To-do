{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","marginBottom","input","marginRight","TodoItem","todo","i","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","onToggle","protoTypes","PropTypes","arrayOf","object","isRequired","func","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eacfefd2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\n\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '.5rem 1rem',\n    border: '1px solid #ccc',\n    marginBottom: '5px',\n  },\n  input: {\n    marginRight: '1rem',\n  },\n};\n\nfunction TodoItem({ todo, i, onChange }) {\n  const { removeTodo } = useContext(Context);\n\n  const classes = [];\n\n  if (todo.completed) {\n    classes.push('done');\n  }\n\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(' ')}>\n        <input\n          type='checkbox'\n          checked={todo.completed}\n          style={styles.input}\n          onChange={() => onChange(todo.id)}\n        ></input>\n        <strong>{i + 1}</strong>\n        &nbsp;\n        {todo.title}\n      </span>\n      <button\n        className='rm'\n        onClick={() => removeTodo(todo.id) /* removeTodo.bind(null, todo.id) */}\n      >\n        &times;\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n  },\n};\n\nfunction TodoList(props) {\n  return (\n    <ul style={styles.ul}>\n      {props.todos.map((todo, i) => {\n        return (\n          <TodoItem todo={todo} key={todo.id} i={i} onChange={props.onToggle} />\n        );\n      })}\n    </ul>\n  );\n}\n\nTodoList.protoTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\nexport default () => (\n  <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem' }}>\n    <div className='lds-ring'>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './Modal.css';\n\nexport default class Modal extends React.Component {\n  state = {\n    isOpen: false,\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          style={{ marginBottom: '10px' }}\n          onClick={() => this.setState({ isOpen: true })}\n        >\n          Open Modal\n        </button>\n\n        {this.state.isOpen && (\n          <div className='modal'>\n            <div className='modal-body'>\n              <h1>Modal Title</h1>\n              <p>Modal text</p>\n              <button onClick={() => this.setState({ isOpen: false })}>\n                Close Modal\n              </button>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { useEffect } from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\n// import AddTodo from './Todo/AddTodo';\nimport Loader from './Loader';\nimport Modal from './Modal/Modal';\n\nconst AddTodo = React.lazy(\n  () =>\n    new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(import('./Todo/AddTodo'));\n      }, 2000);\n    }),\n);\n\nfunction App() {\n  let [todos, setTodos] = React.useState([]);\n  let [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then((response) => response.json())\n      .then((todos) => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false);\n        }, 1000);\n      });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      (todos = todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })),\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ]),\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className='wrapper'>\n        <h1>Tutorial</h1>\n\n        <Modal></Modal>\n\n        <React.Suspense fallback={<p>Loading.....</p>}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader />}\n\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>To dos empty</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}